general {
    lock_cmd = pidof hyprlock || hyprlock	# dbus/sysd lock command (loginctl lock-session)
    unlock_cmd = notify-send "unlock!"      # same as above, but unlock
    before_sleep_cmd = loginctl lock-session     # command ran before sleep
    #after_sleep_cmd = hyprctl dispatch dpms on   # command ran after sleep
    #ignore_dbus_inhibit = false             # whether to ignore dbus-sent idle-inhibit requests (used by e.g. firefox or steam)
    #ignore_systemd_inhibit = false          # whether to ignore systemd-inhibit --what=idle inhibitors
}

#listener {
#    timeout = 5                            # in seconds
#    on-timeout = notify-send "You are idle!" # command to run when timeout has passed
#    on-resume = notify-send "Welcome back!"  # command to run when activity is detected after timeout has fired.
#}

# turn off keyboard backlight, comment out this section if you dont have a keyboard backlight.
#listener { 
#    timeout = 150                                          # 2.5min.
#    on-timeout = brightnessctl -sd rgb:kbd_backlight set 0 # turn off keyboard backlight.
#    on-resume = brightnessctl -rd rgb:kbd_backlight        # turn on keyboard backlight.
#}

listener {
    timeout = 120                         # in seconds
    on-timeout = loginctl lock-session		#command to run when timeout has passed
    #on-resume = hyprctl dispatch exec wpa_cli reconnect # command to run when activity is detected after timeout has fired.
}

listener {
    timeout = 180                                # 2.5min
    on-timeout = hyprctl dispatch exec 'light > .cache/light' && hyprctl dispatch dpms off        # screen off when timeout has passed
    on-resume = hyprctl dispatch dpms on && hyprctl dispatch exec 'light -S $(cat .cache/light)' && hyprctl dispatch exec 'rm .cache/light'          # screen on when activity is detected after timeout has fired.
}
